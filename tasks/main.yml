---
# tasks file for ctfd
- name: "Install CTFd"
  become: true
  block:
    - name: "Install system packages"
      ansible.builtin.package:
        package:
          - authbind
          - python3
          - python3-pip
          - python3-venv
          - python-is-python3
          - unzip
          - git
          - acl
        state: present

    - name: "Create CTFd user"
      ansible.builtin.user:
        name: "ctfd"
        shell: "/bin/bash"
        home: "/opt/ctfd"
        system: true
        createhome: false

    - name: Authorize authbind for CTFd user
      ansible.builtin.file:
        path: "/etc/authbind/byport/{{ ctfd_bind_address.split(':')[1] }}"
        state: touch
        owner: "ctfd"
        group: "ctfd"
        mode: "0500"

    - name: "Check if CTFd is already installed"
      ansible.builtin.stat:
        path: "/opt/CTFd-{{ ctfd_version }}"
      register: ctfd_installed

    - name: "Install CTFd"
      when: not ctfd_installed.stat.exists
      block:
        - name: "Download CTFd"
          ansible.builtin.get_url:
            url: "{{ ctfd_download_url }}"
            dest: "/tmp/ctfd.zip"
            mode: "0644"
            owner: "ctfd"
            group: "ctfd"

        - name: "Unzip CTFd on to /opt"
          ansible.builtin.unarchive:
            src: "/tmp/ctfd.zip"
            dest: "/opt"
            remote_src: true

        - name: "Change owner of file to CTFd"
          ansible.builtin.file:
            path: "/opt/CTFd-{{ ctfd_version }}"
            owner: "ctfd"
            group: "ctfd"
            mode: "0755"
            recurse: true

        - name: "Create symlink to CTFd"
          ansible.builtin.file:
            src: "/opt/CTFd-{{ ctfd_version }}"
            dest: "/opt/ctfd"
            state: link

        - name: "Change owner of link to CTFd"
          ansible.builtin.file:
            path: "/opt/ctfd"
            owner: "ctfd"
            group: "ctfd"
            mode: "0755"

    - name: "Create uploads folder"
      ansible.builtin.file:
        path: "{{ ctfd_uploads_folder }}"
        owner: "ctfd"
        group: "ctfd"
        mode: "0755"
        state: directory

    - name: "Create logs folder"
      ansible.builtin.file:
        path: "{{ ctfd_logs_folder }}"
        owner: "ctfd"
        group: "ctfd"
        mode: "0755"
        state: directory

- name: "Setup CTFd"
  become: true
  become_user: "ctfd"
  block:
    - name: "Install CTFd requirements"
      become: true
      become_user: "ctfd"
      ansible.builtin.pip:
        virtualenv: "{{ ctfd_venv_path }}"
        virtualenv_command: "python3 -m venv"
        requirements: "/opt/ctfd/requirements.txt"
        umask: "0022"

    - name: "Push config.ini"
      ansible.builtin.template:
        src: "config.ini.j2"
        dest: "/opt/ctfd/CTFd/config.ini"
        owner: "ctfd"
        group: "ctfd"
        mode: "0644"

    - name: "Install plugins"
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "/opt/ctfd/CTFd/plugins/{{ item.name }}"
        version: "{{ item.version | default('HEAD') }}"
        update: true
      loop: "{{ ctfd_plugins }}"

    - name: "Install requirements of plugins"
      ansible.builtin.pip:
        virtualenv: "{{ ctfd_venv_path }}"
        virtualenv_command: "python3 -m venv"
        requirements: "/opt/ctfd/CTFd/plugins/{{ item.name }}/requirements.txt"
      ignore_errors: true
      loop: "{{ ctfd_plugins }}"

    - name: "Migrate DB"
      ansible.builtin.command: "{{ ctfd_venv_path }}/bin/python3 manage.py db upgrade"
      args:
        chdir: "/opt/ctfd/"
      register: db_migrated
      changed_when: "'Running' in db_migrated.stderr"

- name: "Setup service"
  become: true
  block:
    - name: "Create service"
      ansible.builtin.template:
        src: "ctfd.service.j2"
        dest: "/etc/systemd/system/ctfd.service"
        owner: "root"
        group: "root"
        mode: "0644"

    - name: "Start service"
      ansible.builtin.service:
        name: "ctfd"
        state: started
        enabled: true
